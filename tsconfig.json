{
  "compilerOptions": {
    "incremental": true,
    "target": "es5",
    "module": "umd",
    "allowJs": false,
    "checkJs": false,
    // "jsx": "preserve",                     // Specify JSX code generation: 'preserve', 'react-native', or 'react'.
    "declaration": false,
    "declarationMap": false,
    "sourceMap": true,
    // "outFile": ".",                        // Concatenate and emit output to single file.
    //"outDir": "./build",
    "rootDir": "./src/",
    "composite": false,
    "tsBuildInfoFile": "./.tsc",
    "removeComments": true,
    "noEmit": false,
    // "importHelpers": true,
    // "downlevelIteration": true,
    // "isolatedModules": true,
    "strict": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    "alwaysStrict": true,
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "moduleResolution": "node",
    "baseUrl": ".",
    "paths": {
      "*": [
        "*"
      ]
    },
    "rootDirs": [
      "build/root"
    ],
    // "typeRoots": [],
    //"types": [],
    // "allowSyntheticDefaultImports": true,  // Allow default imports from modules with no default export. This does not affect code emit, just typechecking
    "esModuleInterop": true,
    // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    // "preserveSymlinks": true,              // Do not resolve the real path of symlinks.
    // "allowUmdGlobalAccess": true,          // Allow accessing UMD globals from modules.
    //"sourceRoot": "./src",                  // Specify the location where debugger should locate TypeScript files instead of source locations.
    //"mapRoot": "../.map",                      // Specify the location where debugger should locate map files instead of generated locations.
    // "inlineSourceMap": true,               // Emit a single file with source maps instead of having a separate file.
    // "inlineSources": true,                 // Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.
    "experimentalDecorators": true,
    // Experimental Options
    // "emitDecoratorMetadata": true,         // Enables experimental support for emitting type metadata for decorators.
    "forceConsistentCasingInFileNames": true
  },
  "exclude": [
    "./lib",
    "./dump",
    "tsconfig-*.js",
    "node_modules"
  ]
}
